# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Build with Maven
      run: mvn -B verify --file pom.xml
    - name: Codecov
      uses: codecov/codecov-action@v1.2.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
    - name: Codacy Analysis CLI
      # You may pin to the exact commit or the version.
      # uses: codacy/codacy-analysis-cli-action@719f3c81c34b74acd0f8ed69cd8e4be28fc70ac8
      uses: codacy/codacy-analysis-cli-action@2.0.1
      with:
        # Run with verbose output
        verbose: # optional
        # API token to retrieve your remote Codacy configuration for the project being analyzed
        project-token: ${{ secrets.CODACY_API_KEY }}
        # Codacy's API URL, to retrieve your remote Codacy configuration
        codacy-api-base-url: # optional
        # Format of the output file
        format: # optional
        # Send analysis results to an output file
        output: # optional
        # The directory to be analyzed
        directory: # optional
        # Number of tools to run in parallel
        parallel: # optional
        # Maximum number of issues allowed for the analysis to succeed
        max-allowed-issues: # optional
        # The name of the tool to analyze the code
        tool: # optional
        # Maximum time each tool has to execute
        tool-timeout: # optional
        # Upload analysis results to Codacy
        upload: true
        # Fail the analysis if any tool fails to run
        fail-if-incomplete: false
        # Allow network access for tools
        allow-network: # optional
        # Force files to be readable by changing the permissions before running the analysis
        force-file-permissions: # optional
        # Reduce issue severity by one level, for non-security issues, for compatibility with GitHub's code scanning feature. This option will only have an effect when used in conjunction with '--format sarif'.
        gh-code-scanning-compat: # optional
    - name: Codacy Coverage Reporter
      # You may pin to the exact commit or the version.
      # uses: codacy/codacy-coverage-reporter-action@53ebfe140c89720a8234b8ea4fabaf6de5736092
      uses: codacy/codacy-coverage-reporter-action@0.2.0
      with:
        # Project token for the Codacy project you want to send coverage information
        project-token: ${{ secrets.CODACY_API_KEY }}
        # Optional comma separated list of coverage reports to send to Codacy
        coverage-reports: # optional, default is 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        # Artifact name
        # A file, directory or wildcard pattern that describes what to upload
        path: ./**/target/*.jar
        # The desired behavior if no files are found using the provided path.
        warn: Output a warning but do not fail the action
